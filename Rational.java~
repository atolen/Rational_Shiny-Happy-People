public class Rational {
    // instvars
    private static int numerator;
    private static int denominator;

    // constructor
    public Rational() {
	setNumerator( 0 );
	setDenominator( 1 );
    }

    public Rational( int n, int d ) {
	this();
	if( d != 0 ) {
	    setNumerator( n );
	    setDenominator( d );
	    /* try {
		setNumerator( n );
		setDenominator( d );
	    } 

	    catch(Exception e) {
		
	    } */
	}
	
	    
    } // close Rational(n,d)

    // mutators
    public void setNumerator( int n ) {
	numerator = n;
    }

    public void setDenominator( int d ) {
	denominator = d;
    }

    // other methods
    public String toString() {
	String retStr = numerator + "/" + denominator;
	return retStr;
    }

    public double floatValue() {
	double retDub = (double)numerator / denominator;
	return retDub;
    }
    
    public void multiply( Rational r ) {
	int n = this.numerator * r.numerator;
	int d = this.denominator * r.denominator;
	this.setNumerator( n );
	this.setDenominator( d );
    }
    
	
    public void divide( Rational r ) {
       	int n = this.numerator * r.denominator;
	int d = this.denominator * r.numerator;
	this.setNumerator( n );
	this.setDenominator( d );
    }
    
} // close class Rational

	    
